#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SLIIT.Core.DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SLIIT.ITP")]
	public partial class ITPManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTB_Dept(TB_Dept instance);
    partial void UpdateTB_Dept(TB_Dept instance);
    partial void DeleteTB_Dept(TB_Dept instance);
    partial void InsertTB_VF_VehicleStatus(TB_VF_VehicleStatus instance);
    partial void UpdateTB_VF_VehicleStatus(TB_VF_VehicleStatus instance);
    partial void DeleteTB_VF_VehicleStatus(TB_VF_VehicleStatus instance);
    partial void InsertTB_GP_Request(TB_GP_Request instance);
    partial void UpdateTB_GP_Request(TB_GP_Request instance);
    partial void DeleteTB_GP_Request(TB_GP_Request instance);
    partial void InsertTB_HR_AttendanceLog(TB_HR_AttendanceLog instance);
    partial void UpdateTB_HR_AttendanceLog(TB_HR_AttendanceLog instance);
    partial void DeleteTB_HR_AttendanceLog(TB_HR_AttendanceLog instance);
    partial void InsertTB_HR_AttendUser(TB_HR_AttendUser instance);
    partial void UpdateTB_HR_AttendUser(TB_HR_AttendUser instance);
    partial void DeleteTB_HR_AttendUser(TB_HR_AttendUser instance);
    partial void InsertTB_IC_Category(TB_IC_Category instance);
    partial void UpdateTB_IC_Category(TB_IC_Category instance);
    partial void DeleteTB_IC_Category(TB_IC_Category instance);
    partial void InsertTB_IC_CustomerReturn(TB_IC_CustomerReturn instance);
    partial void UpdateTB_IC_CustomerReturn(TB_IC_CustomerReturn instance);
    partial void DeleteTB_IC_CustomerReturn(TB_IC_CustomerReturn instance);
    partial void InsertTB_IC_IssueItem(TB_IC_IssueItem instance);
    partial void UpdateTB_IC_IssueItem(TB_IC_IssueItem instance);
    partial void DeleteTB_IC_IssueItem(TB_IC_IssueItem instance);
    partial void InsertTB_IC_MasterData(TB_IC_MasterData instance);
    partial void UpdateTB_IC_MasterData(TB_IC_MasterData instance);
    partial void DeleteTB_IC_MasterData(TB_IC_MasterData instance);
    partial void InsertTB_Menu(TB_Menu instance);
    partial void UpdateTB_Menu(TB_Menu instance);
    partial void DeleteTB_Menu(TB_Menu instance);
    partial void InsertTB_MenuRole(TB_MenuRole instance);
    partial void UpdateTB_MenuRole(TB_MenuRole instance);
    partial void DeleteTB_MenuRole(TB_MenuRole instance);
    partial void InsertTB_PC_IOUDetail(TB_PC_IOUDetail instance);
    partial void UpdateTB_PC_IOUDetail(TB_PC_IOUDetail instance);
    partial void DeleteTB_PC_IOUDetail(TB_PC_IOUDetail instance);
    partial void InsertTB_PC_IOUHeader(TB_PC_IOUHeader instance);
    partial void UpdateTB_PC_IOUHeader(TB_PC_IOUHeader instance);
    partial void DeleteTB_PC_IOUHeader(TB_PC_IOUHeader instance);
    partial void InsertTB_Role(TB_Role instance);
    partial void UpdateTB_Role(TB_Role instance);
    partial void DeleteTB_Role(TB_Role instance);
    partial void InsertTB_User(TB_User instance);
    partial void UpdateTB_User(TB_User instance);
    partial void DeleteTB_User(TB_User instance);
    partial void InsertTB_UserRole(TB_UserRole instance);
    partial void UpdateTB_UserRole(TB_UserRole instance);
    partial void DeleteTB_UserRole(TB_UserRole instance);
    partial void InsertTB_VF_DailyStat(TB_VF_DailyStat instance);
    partial void UpdateTB_VF_DailyStat(TB_VF_DailyStat instance);
    partial void DeleteTB_VF_DailyStat(TB_VF_DailyStat instance);
    partial void InsertTB_VF_Vehicle(TB_VF_Vehicle instance);
    partial void UpdateTB_VF_Vehicle(TB_VF_Vehicle instance);
    partial void DeleteTB_VF_Vehicle(TB_VF_Vehicle instance);
    #endregion
		
		public ITPManagerDataContext() : 
				base(global::SLIIT.Core.Properties.Settings.Default.SLIIT_ITPConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ITPManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITPManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITPManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ITPManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TB_Dept> TB_Depts
		{
			get
			{
				return this.GetTable<TB_Dept>();
			}
		}
		
		public System.Data.Linq.Table<TB_VF_VehicleStatus> TB_VF_VehicleStatus
		{
			get
			{
				return this.GetTable<TB_VF_VehicleStatus>();
			}
		}
		
		public System.Data.Linq.Table<TB_GP_Request> TB_GP_Requests
		{
			get
			{
				return this.GetTable<TB_GP_Request>();
			}
		}
		
		public System.Data.Linq.Table<TB_HR_AttendanceLog> TB_HR_AttendanceLogs
		{
			get
			{
				return this.GetTable<TB_HR_AttendanceLog>();
			}
		}
		
		public System.Data.Linq.Table<TB_HR_AttendUser> TB_HR_AttendUsers
		{
			get
			{
				return this.GetTable<TB_HR_AttendUser>();
			}
		}
		
		public System.Data.Linq.Table<TB_IC_Category> TB_IC_Categories
		{
			get
			{
				return this.GetTable<TB_IC_Category>();
			}
		}
		
		public System.Data.Linq.Table<TB_IC_CustomerReturn> TB_IC_CustomerReturns
		{
			get
			{
				return this.GetTable<TB_IC_CustomerReturn>();
			}
		}
		
		public System.Data.Linq.Table<TB_IC_IssueItem> TB_IC_IssueItems
		{
			get
			{
				return this.GetTable<TB_IC_IssueItem>();
			}
		}
		
		public System.Data.Linq.Table<TB_IC_MasterData> TB_IC_MasterDatas
		{
			get
			{
				return this.GetTable<TB_IC_MasterData>();
			}
		}
		
		public System.Data.Linq.Table<TB_Menu> TB_Menus
		{
			get
			{
				return this.GetTable<TB_Menu>();
			}
		}
		
		public System.Data.Linq.Table<TB_MenuRole> TB_MenuRoles
		{
			get
			{
				return this.GetTable<TB_MenuRole>();
			}
		}
		
		public System.Data.Linq.Table<TB_PC_IOUDetail> TB_PC_IOUDetails
		{
			get
			{
				return this.GetTable<TB_PC_IOUDetail>();
			}
		}
		
		public System.Data.Linq.Table<TB_PC_IOUHeader> TB_PC_IOUHeaders
		{
			get
			{
				return this.GetTable<TB_PC_IOUHeader>();
			}
		}
		
		public System.Data.Linq.Table<TB_Role> TB_Roles
		{
			get
			{
				return this.GetTable<TB_Role>();
			}
		}
		
		public System.Data.Linq.Table<TB_User> TB_Users
		{
			get
			{
				return this.GetTable<TB_User>();
			}
		}
		
		public System.Data.Linq.Table<TB_UserRole> TB_UserRoles
		{
			get
			{
				return this.GetTable<TB_UserRole>();
			}
		}
		
		public System.Data.Linq.Table<TB_VF_DailyStat> TB_VF_DailyStats
		{
			get
			{
				return this.GetTable<TB_VF_DailyStat>();
			}
		}
		
		public System.Data.Linq.Table<TB_VF_Vehicle> TB_VF_Vehicles
		{
			get
			{
				return this.GetTable<TB_VF_Vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Dept")]
	public partial class TB_Dept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnDeptID;
		
		private string _DeptName;
		
		private EntitySet<TB_HR_AttendUser> _TB_HR_AttendUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnDeptIDChanging(int value);
    partial void OnRnDeptIDChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    #endregion
		
		public TB_Dept()
		{
			this._TB_HR_AttendUsers = new EntitySet<TB_HR_AttendUser>(new Action<TB_HR_AttendUser>(this.attach_TB_HR_AttendUsers), new Action<TB_HR_AttendUser>(this.detach_TB_HR_AttendUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnDeptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnDeptID
		{
			get
			{
				return this._RnDeptID;
			}
			set
			{
				if ((this._RnDeptID != value))
				{
					this.OnRnDeptIDChanging(value);
					this.SendPropertyChanging();
					this._RnDeptID = value;
					this.SendPropertyChanged("RnDeptID");
					this.OnRnDeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Dept_TB_HR_AttendUser", Storage="_TB_HR_AttendUsers", ThisKey="RnDeptID", OtherKey="Dept")]
		public EntitySet<TB_HR_AttendUser> TB_HR_AttendUsers
		{
			get
			{
				return this._TB_HR_AttendUsers;
			}
			set
			{
				this._TB_HR_AttendUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_HR_AttendUsers(TB_HR_AttendUser entity)
		{
			this.SendPropertyChanging();
			entity.TB_Dept = this;
		}
		
		private void detach_TB_HR_AttendUsers(TB_HR_AttendUser entity)
		{
			this.SendPropertyChanging();
			entity.TB_Dept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_VF_VehicleStatus")]
	public partial class TB_VF_VehicleStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusText;
		
		private bool _IsDeleted;
		
		private EntitySet<TB_VF_Vehicle> _TB_VF_Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusTextChanging(string value);
    partial void OnStatusTextChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TB_VF_VehicleStatus()
		{
			this._TB_VF_Vehicles = new EntitySet<TB_VF_Vehicle>(new Action<TB_VF_Vehicle>(this.attach_TB_VF_Vehicles), new Action<TB_VF_Vehicle>(this.detach_TB_VF_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusText", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusText
		{
			get
			{
				return this._StatusText;
			}
			set
			{
				if ((this._StatusText != value))
				{
					this.OnStatusTextChanging(value);
					this.SendPropertyChanging();
					this._StatusText = value;
					this.SendPropertyChanged("StatusText");
					this.OnStatusTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_VF_VehicleStatus_TB_VF_Vehicle", Storage="_TB_VF_Vehicles", ThisKey="StatusID", OtherKey="Status")]
		public EntitySet<TB_VF_Vehicle> TB_VF_Vehicles
		{
			get
			{
				return this._TB_VF_Vehicles;
			}
			set
			{
				this._TB_VF_Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_VF_Vehicles(TB_VF_Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.TB_VF_VehicleStatus = this;
		}
		
		private void detach_TB_VF_Vehicles(TB_VF_Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.TB_VF_VehicleStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_GP_Request")]
	public partial class TB_GP_Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnRequestID;
		
		private string _CompanyName;
		
		private string _Address;
		
		private string _Tel;
		
		private string _EmailAddress;
		
		private string _ReasonForRequest;
		
		private System.Nullable<int> _ApprovedBy;
		
		private string _ItemsToBeDeclared;
		
		private string _VisitingArea;
		
		private System.Nullable<System.DateTime> _DateOfVisit;
		
		private System.Nullable<System.DateTime> _FromTime;
		
		private System.Nullable<System.DateTime> _ToTime;
		
		private string _RequestComments;
		
		private System.Nullable<int> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnRequestIDChanging(int value);
    partial void OnRnRequestIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnReasonForRequestChanging(string value);
    partial void OnReasonForRequestChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnItemsToBeDeclaredChanging(string value);
    partial void OnItemsToBeDeclaredChanged();
    partial void OnVisitingAreaChanging(string value);
    partial void OnVisitingAreaChanged();
    partial void OnDateOfVisitChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfVisitChanged();
    partial void OnFromTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFromTimeChanged();
    partial void OnToTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnToTimeChanged();
    partial void OnRequestCommentsChanging(string value);
    partial void OnRequestCommentsChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public TB_GP_Request()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnRequestID
		{
			get
			{
				return this._RnRequestID;
			}
			set
			{
				if ((this._RnRequestID != value))
				{
					this.OnRnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RnRequestID = value;
					this.SendPropertyChanged("RnRequestID");
					this.OnRnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(MAX)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(MAX)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonForRequest", DbType="VarChar(MAX)")]
		public string ReasonForRequest
		{
			get
			{
				return this._ReasonForRequest;
			}
			set
			{
				if ((this._ReasonForRequest != value))
				{
					this.OnReasonForRequestChanging(value);
					this.SendPropertyChanging();
					this._ReasonForRequest = value;
					this.SendPropertyChanged("ReasonForRequest");
					this.OnReasonForRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsToBeDeclared", DbType="VarChar(MAX)")]
		public string ItemsToBeDeclared
		{
			get
			{
				return this._ItemsToBeDeclared;
			}
			set
			{
				if ((this._ItemsToBeDeclared != value))
				{
					this.OnItemsToBeDeclaredChanging(value);
					this.SendPropertyChanging();
					this._ItemsToBeDeclared = value;
					this.SendPropertyChanged("ItemsToBeDeclared");
					this.OnItemsToBeDeclaredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitingArea", DbType="VarChar(MAX)")]
		public string VisitingArea
		{
			get
			{
				return this._VisitingArea;
			}
			set
			{
				if ((this._VisitingArea != value))
				{
					this.OnVisitingAreaChanging(value);
					this.SendPropertyChanging();
					this._VisitingArea = value;
					this.SendPropertyChanged("VisitingArea");
					this.OnVisitingAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfVisit", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfVisit
		{
			get
			{
				return this._DateOfVisit;
			}
			set
			{
				if ((this._DateOfVisit != value))
				{
					this.OnDateOfVisitChanging(value);
					this.SendPropertyChanging();
					this._DateOfVisit = value;
					this.SendPropertyChanged("DateOfVisit");
					this.OnDateOfVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromTime
		{
			get
			{
				return this._FromTime;
			}
			set
			{
				if ((this._FromTime != value))
				{
					this.OnFromTimeChanging(value);
					this.SendPropertyChanging();
					this._FromTime = value;
					this.SendPropertyChanged("FromTime");
					this.OnFromTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToTime
		{
			get
			{
				return this._ToTime;
			}
			set
			{
				if ((this._ToTime != value))
				{
					this.OnToTimeChanging(value);
					this.SendPropertyChanging();
					this._ToTime = value;
					this.SendPropertyChanged("ToTime");
					this.OnToTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestComments", DbType="VarChar(MAX)")]
		public string RequestComments
		{
			get
			{
				return this._RequestComments;
			}
			set
			{
				if ((this._RequestComments != value))
				{
					this.OnRequestCommentsChanging(value);
					this.SendPropertyChanging();
					this._RequestComments = value;
					this.SendPropertyChanged("RequestComments");
					this.OnRequestCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_HR_AttendanceLog")]
	public partial class TB_HR_AttendanceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnLogID;
		
		private int _UserID;
		
		private System.DateTime _LogTime;
		
		private bool _Type;
		
		private bool _IsDeleted;
		
		private EntityRef<TB_HR_AttendUser> _TB_HR_AttendUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnLogIDChanging(int value);
    partial void OnRnLogIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnTypeChanging(bool value);
    partial void OnTypeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TB_HR_AttendanceLog()
		{
			this._TB_HR_AttendUser = default(EntityRef<TB_HR_AttendUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnLogID
		{
			get
			{
				return this._RnLogID;
			}
			set
			{
				if ((this._RnLogID != value))
				{
					this.OnRnLogIDChanging(value);
					this.SendPropertyChanging();
					this._RnLogID = value;
					this.SendPropertyChanged("RnLogID");
					this.OnRnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._TB_HR_AttendUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Bit NOT NULL")]
		public bool Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_HR_AttendUser_TB_HR_AttendanceLog", Storage="_TB_HR_AttendUser", ThisKey="UserID", OtherKey="RnAttendUserID", IsForeignKey=true)]
		public TB_HR_AttendUser TB_HR_AttendUser
		{
			get
			{
				return this._TB_HR_AttendUser.Entity;
			}
			set
			{
				TB_HR_AttendUser previousValue = this._TB_HR_AttendUser.Entity;
				if (((previousValue != value) 
							|| (this._TB_HR_AttendUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_HR_AttendUser.Entity = null;
						previousValue.TB_HR_AttendanceLogs.Remove(this);
					}
					this._TB_HR_AttendUser.Entity = value;
					if ((value != null))
					{
						value.TB_HR_AttendanceLogs.Add(this);
						this._UserID = value.RnAttendUserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("TB_HR_AttendUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_HR_AttendUser")]
	public partial class TB_HR_AttendUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnAttendUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _Dept;
		
		private int _CardNo;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<TB_HR_AttendanceLog> _TB_HR_AttendanceLogs;
		
		private EntitySet<TB_VF_Vehicle> _TB_VF_Vehicles;
		
		private EntityRef<TB_Dept> _TB_Dept;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnAttendUserIDChanging(int value);
    partial void OnRnAttendUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDeptChanging(System.Nullable<int> value);
    partial void OnDeptChanged();
    partial void OnCardNoChanging(int value);
    partial void OnCardNoChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TB_HR_AttendUser()
		{
			this._TB_HR_AttendanceLogs = new EntitySet<TB_HR_AttendanceLog>(new Action<TB_HR_AttendanceLog>(this.attach_TB_HR_AttendanceLogs), new Action<TB_HR_AttendanceLog>(this.detach_TB_HR_AttendanceLogs));
			this._TB_VF_Vehicles = new EntitySet<TB_VF_Vehicle>(new Action<TB_VF_Vehicle>(this.attach_TB_VF_Vehicles), new Action<TB_VF_Vehicle>(this.detach_TB_VF_Vehicles));
			this._TB_Dept = default(EntityRef<TB_Dept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnAttendUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnAttendUserID
		{
			get
			{
				return this._RnAttendUserID;
			}
			set
			{
				if ((this._RnAttendUserID != value))
				{
					this.OnRnAttendUserIDChanging(value);
					this.SendPropertyChanging();
					this._RnAttendUserID = value;
					this.SendPropertyChanged("RnAttendUserID");
					this.OnRnAttendUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept", DbType="Int")]
		public System.Nullable<int> Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					if (this._TB_Dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="Int NOT NULL")]
		public int CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_HR_AttendUser_TB_HR_AttendanceLog", Storage="_TB_HR_AttendanceLogs", ThisKey="RnAttendUserID", OtherKey="UserID")]
		public EntitySet<TB_HR_AttendanceLog> TB_HR_AttendanceLogs
		{
			get
			{
				return this._TB_HR_AttendanceLogs;
			}
			set
			{
				this._TB_HR_AttendanceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_HR_AttendUser_TB_VF_Vehicle", Storage="_TB_VF_Vehicles", ThisKey="RnAttendUserID", OtherKey="DriverID")]
		public EntitySet<TB_VF_Vehicle> TB_VF_Vehicles
		{
			get
			{
				return this._TB_VF_Vehicles;
			}
			set
			{
				this._TB_VF_Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Dept_TB_HR_AttendUser", Storage="_TB_Dept", ThisKey="Dept", OtherKey="RnDeptID", IsForeignKey=true)]
		public TB_Dept TB_Dept
		{
			get
			{
				return this._TB_Dept.Entity;
			}
			set
			{
				TB_Dept previousValue = this._TB_Dept.Entity;
				if (((previousValue != value) 
							|| (this._TB_Dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Dept.Entity = null;
						previousValue.TB_HR_AttendUsers.Remove(this);
					}
					this._TB_Dept.Entity = value;
					if ((value != null))
					{
						value.TB_HR_AttendUsers.Add(this);
						this._Dept = value.RnDeptID;
					}
					else
					{
						this._Dept = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_Dept");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_HR_AttendanceLogs(TB_HR_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.TB_HR_AttendUser = this;
		}
		
		private void detach_TB_HR_AttendanceLogs(TB_HR_AttendanceLog entity)
		{
			this.SendPropertyChanging();
			entity.TB_HR_AttendUser = null;
		}
		
		private void attach_TB_VF_Vehicles(TB_VF_Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.TB_HR_AttendUser = this;
		}
		
		private void detach_TB_VF_Vehicles(TB_VF_Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.TB_HR_AttendUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_IC_Category")]
	public partial class TB_IC_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnCatID;
		
		private string _CategoryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnCatIDChanging(int value);
    partial void OnRnCatIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public TB_IC_Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnCatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnCatID
		{
			get
			{
				return this._RnCatID;
			}
			set
			{
				if ((this._RnCatID != value))
				{
					this.OnRnCatIDChanging(value);
					this.SendPropertyChanging();
					this._RnCatID = value;
					this.SendPropertyChanged("RnCatID");
					this.OnRnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_IC_CustomerReturns")]
	public partial class TB_IC_CustomerReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnReturnID;
		
		private string _ItemCategory;
		
		private string _IssueCode;
		
		private string _ItemName;
		
		private System.Nullable<int> _StockQty;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _IssueQty;
		
		private System.Nullable<int> _ReturnQty;
		
		private System.Nullable<decimal> _IssuePrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnReturnIDChanging(int value);
    partial void OnRnReturnIDChanged();
    partial void OnItemCategoryChanging(string value);
    partial void OnItemCategoryChanged();
    partial void OnIssueCodeChanging(string value);
    partial void OnIssueCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnStockQtyChanging(System.Nullable<int> value);
    partial void OnStockQtyChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnIssueQtyChanging(System.Nullable<int> value);
    partial void OnIssueQtyChanged();
    partial void OnReturnQtyChanging(System.Nullable<int> value);
    partial void OnReturnQtyChanged();
    partial void OnIssuePriceChanging(System.Nullable<decimal> value);
    partial void OnIssuePriceChanged();
    #endregion
		
		public TB_IC_CustomerReturn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnReturnID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnReturnID
		{
			get
			{
				return this._RnReturnID;
			}
			set
			{
				if ((this._RnReturnID != value))
				{
					this.OnRnReturnIDChanging(value);
					this.SendPropertyChanging();
					this._RnReturnID = value;
					this.SendPropertyChanged("RnReturnID");
					this.OnRnReturnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategory", DbType="NChar(10)")]
		public string ItemCategory
		{
			get
			{
				return this._ItemCategory;
			}
			set
			{
				if ((this._ItemCategory != value))
				{
					this.OnItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._ItemCategory = value;
					this.SendPropertyChanged("ItemCategory");
					this.OnItemCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCode", DbType="NChar(10)")]
		public string IssueCode
		{
			get
			{
				return this._IssueCode;
			}
			set
			{
				if ((this._IssueCode != value))
				{
					this.OnIssueCodeChanging(value);
					this.SendPropertyChanging();
					this._IssueCode = value;
					this.SendPropertyChanged("IssueCode");
					this.OnIssueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NChar(10)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQty", DbType="Int")]
		public System.Nullable<int> StockQty
		{
			get
			{
				return this._StockQty;
			}
			set
			{
				if ((this._StockQty != value))
				{
					this.OnStockQtyChanging(value);
					this.SendPropertyChanging();
					this._StockQty = value;
					this.SendPropertyChanged("StockQty");
					this.OnStockQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueQty", DbType="Int")]
		public System.Nullable<int> IssueQty
		{
			get
			{
				return this._IssueQty;
			}
			set
			{
				if ((this._IssueQty != value))
				{
					this.OnIssueQtyChanging(value);
					this.SendPropertyChanging();
					this._IssueQty = value;
					this.SendPropertyChanged("IssueQty");
					this.OnIssueQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnQty", DbType="Int")]
		public System.Nullable<int> ReturnQty
		{
			get
			{
				return this._ReturnQty;
			}
			set
			{
				if ((this._ReturnQty != value))
				{
					this.OnReturnQtyChanging(value);
					this.SendPropertyChanging();
					this._ReturnQty = value;
					this.SendPropertyChanged("ReturnQty");
					this.OnReturnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuePrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> IssuePrice
		{
			get
			{
				return this._IssuePrice;
			}
			set
			{
				if ((this._IssuePrice != value))
				{
					this.OnIssuePriceChanging(value);
					this.SendPropertyChanging();
					this._IssuePrice = value;
					this.SendPropertyChanged("IssuePrice");
					this.OnIssuePriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_IC_IssueItem")]
	public partial class TB_IC_IssueItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnIssueID;
		
		private string _ItemCode;
		
		private string _ItemCategory;
		
		private string _ItemName;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _StockQty;
		
		private System.Nullable<int> _IssueQty;
		
		private System.Nullable<decimal> _IssueUnitprice;
		
		private System.Nullable<decimal> _TotalPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnIssueIDChanging(int value);
    partial void OnRnIssueIDChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemCategoryChanging(string value);
    partial void OnItemCategoryChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnStockQtyChanging(System.Nullable<int> value);
    partial void OnStockQtyChanged();
    partial void OnIssueQtyChanging(System.Nullable<int> value);
    partial void OnIssueQtyChanged();
    partial void OnIssueUnitpriceChanging(System.Nullable<decimal> value);
    partial void OnIssueUnitpriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    #endregion
		
		public TB_IC_IssueItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnIssueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnIssueID
		{
			get
			{
				return this._RnIssueID;
			}
			set
			{
				if ((this._RnIssueID != value))
				{
					this.OnRnIssueIDChanging(value);
					this.SendPropertyChanging();
					this._RnIssueID = value;
					this.SendPropertyChanged("RnIssueID");
					this.OnRnIssueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NChar(10)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategory", DbType="NChar(10)")]
		public string ItemCategory
		{
			get
			{
				return this._ItemCategory;
			}
			set
			{
				if ((this._ItemCategory != value))
				{
					this.OnItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._ItemCategory = value;
					this.SendPropertyChanged("ItemCategory");
					this.OnItemCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NChar(10)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQty", DbType="Int")]
		public System.Nullable<int> StockQty
		{
			get
			{
				return this._StockQty;
			}
			set
			{
				if ((this._StockQty != value))
				{
					this.OnStockQtyChanging(value);
					this.SendPropertyChanging();
					this._StockQty = value;
					this.SendPropertyChanged("StockQty");
					this.OnStockQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueQty", DbType="Int")]
		public System.Nullable<int> IssueQty
		{
			get
			{
				return this._IssueQty;
			}
			set
			{
				if ((this._IssueQty != value))
				{
					this.OnIssueQtyChanging(value);
					this.SendPropertyChanging();
					this._IssueQty = value;
					this.SendPropertyChanged("IssueQty");
					this.OnIssueQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUnitprice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> IssueUnitprice
		{
			get
			{
				return this._IssueUnitprice;
			}
			set
			{
				if ((this._IssueUnitprice != value))
				{
					this.OnIssueUnitpriceChanging(value);
					this.SendPropertyChanging();
					this._IssueUnitprice = value;
					this.SendPropertyChanged("IssueUnitprice");
					this.OnIssueUnitpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_IC_MasterData")]
	public partial class TB_IC_MasterData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnItemID;
		
		private string _ItemCode;
		
		private string _ItemCategory;
		
		private string _ItemName;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _TotalPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnItemIDChanging(int value);
    partial void OnRnItemIDChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemCategoryChanging(string value);
    partial void OnItemCategoryChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    #endregion
		
		public TB_IC_MasterData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnItemID
		{
			get
			{
				return this._RnItemID;
			}
			set
			{
				if ((this._RnItemID != value))
				{
					this.OnRnItemIDChanging(value);
					this.SendPropertyChanging();
					this._RnItemID = value;
					this.SendPropertyChanged("RnItemID");
					this.OnRnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NChar(10)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCategory", DbType="NChar(10)")]
		public string ItemCategory
		{
			get
			{
				return this._ItemCategory;
			}
			set
			{
				if ((this._ItemCategory != value))
				{
					this.OnItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._ItemCategory = value;
					this.SendPropertyChanged("ItemCategory");
					this.OnItemCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NChar(10)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Menu")]
	public partial class TB_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnMenu;
		
		private string _MenuName;
		
		private string _MenuImage;
		
		private string _MenuPath;
		
		private string _MenuColorStyle;
		
		private System.Nullable<int> _MenuOrder;
		
		private EntitySet<TB_MenuRole> _TB_MenuRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnMenuChanging(int value);
    partial void OnRnMenuChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuImageChanging(string value);
    partial void OnMenuImageChanged();
    partial void OnMenuPathChanging(string value);
    partial void OnMenuPathChanged();
    partial void OnMenuColorStyleChanging(string value);
    partial void OnMenuColorStyleChanged();
    partial void OnMenuOrderChanging(System.Nullable<int> value);
    partial void OnMenuOrderChanged();
    #endregion
		
		public TB_Menu()
		{
			this._TB_MenuRoles = new EntitySet<TB_MenuRole>(new Action<TB_MenuRole>(this.attach_TB_MenuRoles), new Action<TB_MenuRole>(this.detach_TB_MenuRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnMenu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnMenu
		{
			get
			{
				return this._RnMenu;
			}
			set
			{
				if ((this._RnMenu != value))
				{
					this.OnRnMenuChanging(value);
					this.SendPropertyChanging();
					this._RnMenu = value;
					this.SendPropertyChanged("RnMenu");
					this.OnRnMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(MAX)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuImage", DbType="VarChar(MAX)")]
		public string MenuImage
		{
			get
			{
				return this._MenuImage;
			}
			set
			{
				if ((this._MenuImage != value))
				{
					this.OnMenuImageChanging(value);
					this.SendPropertyChanging();
					this._MenuImage = value;
					this.SendPropertyChanged("MenuImage");
					this.OnMenuImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuPath", DbType="VarChar(MAX)")]
		public string MenuPath
		{
			get
			{
				return this._MenuPath;
			}
			set
			{
				if ((this._MenuPath != value))
				{
					this.OnMenuPathChanging(value);
					this.SendPropertyChanging();
					this._MenuPath = value;
					this.SendPropertyChanged("MenuPath");
					this.OnMenuPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuColorStyle", DbType="VarChar(MAX)")]
		public string MenuColorStyle
		{
			get
			{
				return this._MenuColorStyle;
			}
			set
			{
				if ((this._MenuColorStyle != value))
				{
					this.OnMenuColorStyleChanging(value);
					this.SendPropertyChanging();
					this._MenuColorStyle = value;
					this.SendPropertyChanged("MenuColorStyle");
					this.OnMenuColorStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuOrder", DbType="Int")]
		public System.Nullable<int> MenuOrder
		{
			get
			{
				return this._MenuOrder;
			}
			set
			{
				if ((this._MenuOrder != value))
				{
					this.OnMenuOrderChanging(value);
					this.SendPropertyChanging();
					this._MenuOrder = value;
					this.SendPropertyChanged("MenuOrder");
					this.OnMenuOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Menu_TB_MenuRole", Storage="_TB_MenuRoles", ThisKey="RnMenu", OtherKey="MenuID")]
		public EntitySet<TB_MenuRole> TB_MenuRoles
		{
			get
			{
				return this._TB_MenuRoles;
			}
			set
			{
				this._TB_MenuRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_MenuRoles(TB_MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Menu = this;
		}
		
		private void detach_TB_MenuRoles(TB_MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_MenuRole")]
	public partial class TB_MenuRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnMenuRoleID;
		
		private System.Nullable<int> _MenuID;
		
		private System.Nullable<int> _RoleID;
		
		private EntityRef<TB_Menu> _TB_Menu;
		
		private EntityRef<TB_Role> _TB_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnMenuRoleIDChanging(int value);
    partial void OnRnMenuRoleIDChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    #endregion
		
		public TB_MenuRole()
		{
			this._TB_Menu = default(EntityRef<TB_Menu>);
			this._TB_Role = default(EntityRef<TB_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnMenuRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnMenuRoleID
		{
			get
			{
				return this._RnMenuRoleID;
			}
			set
			{
				if ((this._RnMenuRoleID != value))
				{
					this.OnRnMenuRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RnMenuRoleID = value;
					this.SendPropertyChanged("RnMenuRoleID");
					this.OnRnMenuRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._TB_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._TB_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Menu_TB_MenuRole", Storage="_TB_Menu", ThisKey="MenuID", OtherKey="RnMenu", IsForeignKey=true)]
		public TB_Menu TB_Menu
		{
			get
			{
				return this._TB_Menu.Entity;
			}
			set
			{
				TB_Menu previousValue = this._TB_Menu.Entity;
				if (((previousValue != value) 
							|| (this._TB_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Menu.Entity = null;
						previousValue.TB_MenuRoles.Remove(this);
					}
					this._TB_Menu.Entity = value;
					if ((value != null))
					{
						value.TB_MenuRoles.Add(this);
						this._MenuID = value.RnMenu;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Role_TB_MenuRole", Storage="_TB_Role", ThisKey="RoleID", OtherKey="RnRoleID", IsForeignKey=true)]
		public TB_Role TB_Role
		{
			get
			{
				return this._TB_Role.Entity;
			}
			set
			{
				TB_Role previousValue = this._TB_Role.Entity;
				if (((previousValue != value) 
							|| (this._TB_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Role.Entity = null;
						previousValue.TB_MenuRoles.Remove(this);
					}
					this._TB_Role.Entity = value;
					if ((value != null))
					{
						value.TB_MenuRoles.Add(this);
						this._RoleID = value.RnRoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_PC_IOUDetails")]
	public partial class TB_PC_IOUDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnIOUDetailID;
		
		private System.Nullable<int> _IOUHeaderID;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _InsertedDate;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntityRef<TB_PC_IOUHeader> _TB_PC_IOUHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnIOUDetailIDChanging(int value);
    partial void OnRnIOUDetailIDChanged();
    partial void OnIOUHeaderIDChanging(System.Nullable<int> value);
    partial void OnIOUHeaderIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnInsertedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedDateChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public TB_PC_IOUDetail()
		{
			this._TB_PC_IOUHeader = default(EntityRef<TB_PC_IOUHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnIOUDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnIOUDetailID
		{
			get
			{
				return this._RnIOUDetailID;
			}
			set
			{
				if ((this._RnIOUDetailID != value))
				{
					this.OnRnIOUDetailIDChanging(value);
					this.SendPropertyChanging();
					this._RnIOUDetailID = value;
					this.SendPropertyChanged("RnIOUDetailID");
					this.OnRnIOUDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOUHeaderID", DbType="Int")]
		public System.Nullable<int> IOUHeaderID
		{
			get
			{
				return this._IOUHeaderID;
			}
			set
			{
				if ((this._IOUHeaderID != value))
				{
					if (this._TB_PC_IOUHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIOUHeaderIDChanging(value);
					this.SendPropertyChanging();
					this._IOUHeaderID = value;
					this.SendPropertyChanged("IOUHeaderID");
					this.OnIOUHeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_PC_IOUHeader_TB_PC_IOUDetail", Storage="_TB_PC_IOUHeader", ThisKey="IOUHeaderID", OtherKey="RnIOUID", IsForeignKey=true, DeleteRule="CASCADE")]
		public TB_PC_IOUHeader TB_PC_IOUHeader
		{
			get
			{
				return this._TB_PC_IOUHeader.Entity;
			}
			set
			{
				TB_PC_IOUHeader previousValue = this._TB_PC_IOUHeader.Entity;
				if (((previousValue != value) 
							|| (this._TB_PC_IOUHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_PC_IOUHeader.Entity = null;
						previousValue.TB_PC_IOUDetails.Remove(this);
					}
					this._TB_PC_IOUHeader.Entity = value;
					if ((value != null))
					{
						value.TB_PC_IOUDetails.Add(this);
						this._IOUHeaderID = value.RnIOUID;
					}
					else
					{
						this._IOUHeaderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_PC_IOUHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_PC_IOUHeader")]
	public partial class TB_PC_IOUHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnIOUID;
		
		private System.Nullable<System.DateTime> _IOUDate;
		
		private System.Nullable<int> _ApprovedBy;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<int> _RejectedBy;
		
		private System.Nullable<System.DateTime> _RejectedDate;
		
		private string _RejectReason;
		
		private System.Nullable<System.DateTime> _PaidDate;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<System.DateTime> _InsertedDate;
		
		private System.Nullable<int> _PCOfficer;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private EntitySet<TB_PC_IOUDetail> _TB_PC_IOUDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnIOUIDChanging(int value);
    partial void OnRnIOUIDChanged();
    partial void OnIOUDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIOUDateChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnRejectedByChanging(System.Nullable<int> value);
    partial void OnRejectedByChanged();
    partial void OnRejectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRejectedDateChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnInsertedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedDateChanged();
    partial void OnPCOfficerChanging(System.Nullable<int> value);
    partial void OnPCOfficerChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public TB_PC_IOUHeader()
		{
			this._TB_PC_IOUDetails = new EntitySet<TB_PC_IOUDetail>(new Action<TB_PC_IOUDetail>(this.attach_TB_PC_IOUDetails), new Action<TB_PC_IOUDetail>(this.detach_TB_PC_IOUDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnIOUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnIOUID
		{
			get
			{
				return this._RnIOUID;
			}
			set
			{
				if ((this._RnIOUID != value))
				{
					this.OnRnIOUIDChanging(value);
					this.SendPropertyChanging();
					this._RnIOUID = value;
					this.SendPropertyChanged("RnIOUID");
					this.OnRnIOUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOUDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IOUDate
		{
			get
			{
				return this._IOUDate;
			}
			set
			{
				if ((this._IOUDate != value))
				{
					this.OnIOUDateChanging(value);
					this.SendPropertyChanging();
					this._IOUDate = value;
					this.SendPropertyChanged("IOUDate");
					this.OnIOUDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedBy", DbType="Int")]
		public System.Nullable<int> RejectedBy
		{
			get
			{
				return this._RejectedBy;
			}
			set
			{
				if ((this._RejectedBy != value))
				{
					this.OnRejectedByChanging(value);
					this.SendPropertyChanging();
					this._RejectedBy = value;
					this.SendPropertyChanged("RejectedBy");
					this.OnRejectedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RejectedDate
		{
			get
			{
				return this._RejectedDate;
			}
			set
			{
				if ((this._RejectedDate != value))
				{
					this.OnRejectedDateChanging(value);
					this.SendPropertyChanging();
					this._RejectedDate = value;
					this.SendPropertyChanged("RejectedDate");
					this.OnRejectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="VarChar(MAX)")]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCOfficer", DbType="Int")]
		public System.Nullable<int> PCOfficer
		{
			get
			{
				return this._PCOfficer;
			}
			set
			{
				if ((this._PCOfficer != value))
				{
					this.OnPCOfficerChanging(value);
					this.SendPropertyChanging();
					this._PCOfficer = value;
					this.SendPropertyChanged("PCOfficer");
					this.OnPCOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_PC_IOUHeader_TB_PC_IOUDetail", Storage="_TB_PC_IOUDetails", ThisKey="RnIOUID", OtherKey="IOUHeaderID")]
		public EntitySet<TB_PC_IOUDetail> TB_PC_IOUDetails
		{
			get
			{
				return this._TB_PC_IOUDetails;
			}
			set
			{
				this._TB_PC_IOUDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_PC_IOUDetails(TB_PC_IOUDetail entity)
		{
			this.SendPropertyChanging();
			entity.TB_PC_IOUHeader = this;
		}
		
		private void detach_TB_PC_IOUDetails(TB_PC_IOUDetail entity)
		{
			this.SendPropertyChanging();
			entity.TB_PC_IOUHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Role")]
	public partial class TB_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnRoleID;
		
		private string _RoleName;
		
		private string _RoleIcon;
		
		private EntitySet<TB_MenuRole> _TB_MenuRoles;
		
		private EntitySet<TB_UserRole> _TB_UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnRoleIDChanging(int value);
    partial void OnRnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleIconChanging(string value);
    partial void OnRoleIconChanged();
    #endregion
		
		public TB_Role()
		{
			this._TB_MenuRoles = new EntitySet<TB_MenuRole>(new Action<TB_MenuRole>(this.attach_TB_MenuRoles), new Action<TB_MenuRole>(this.detach_TB_MenuRoles));
			this._TB_UserRoles = new EntitySet<TB_UserRole>(new Action<TB_UserRole>(this.attach_TB_UserRoles), new Action<TB_UserRole>(this.detach_TB_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnRoleID
		{
			get
			{
				return this._RnRoleID;
			}
			set
			{
				if ((this._RnRoleID != value))
				{
					this.OnRnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RnRoleID = value;
					this.SendPropertyChanged("RnRoleID");
					this.OnRnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(MAX)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleIcon", DbType="VarChar(MAX)")]
		public string RoleIcon
		{
			get
			{
				return this._RoleIcon;
			}
			set
			{
				if ((this._RoleIcon != value))
				{
					this.OnRoleIconChanging(value);
					this.SendPropertyChanging();
					this._RoleIcon = value;
					this.SendPropertyChanged("RoleIcon");
					this.OnRoleIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Role_TB_MenuRole", Storage="_TB_MenuRoles", ThisKey="RnRoleID", OtherKey="RoleID")]
		public EntitySet<TB_MenuRole> TB_MenuRoles
		{
			get
			{
				return this._TB_MenuRoles;
			}
			set
			{
				this._TB_MenuRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Role_TB_UserRole", Storage="_TB_UserRoles", ThisKey="RnRoleID", OtherKey="RoleID")]
		public EntitySet<TB_UserRole> TB_UserRoles
		{
			get
			{
				return this._TB_UserRoles;
			}
			set
			{
				this._TB_UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_MenuRoles(TB_MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Role = this;
		}
		
		private void detach_TB_MenuRoles(TB_MenuRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Role = null;
		}
		
		private void attach_TB_UserRoles(TB_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Role = this;
		}
		
		private void detach_TB_UserRoles(TB_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_User")]
	public partial class TB_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnUserID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _Dept;
		
		private string _ProfilePic;
		
		private EntitySet<TB_UserRole> _TB_UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnUserIDChanging(int value);
    partial void OnRnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDeptChanging(System.Nullable<int> value);
    partial void OnDeptChanged();
    partial void OnProfilePicChanging(string value);
    partial void OnProfilePicChanged();
    #endregion
		
		public TB_User()
		{
			this._TB_UserRoles = new EntitySet<TB_UserRole>(new Action<TB_UserRole>(this.attach_TB_UserRoles), new Action<TB_UserRole>(this.detach_TB_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnUserID
		{
			get
			{
				return this._RnUserID;
			}
			set
			{
				if ((this._RnUserID != value))
				{
					this.OnRnUserIDChanging(value);
					this.SendPropertyChanging();
					this._RnUserID = value;
					this.SendPropertyChanged("RnUserID");
					this.OnRnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept", DbType="Int")]
		public System.Nullable<int> Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePic", DbType="VarChar(MAX)")]
		public string ProfilePic
		{
			get
			{
				return this._ProfilePic;
			}
			set
			{
				if ((this._ProfilePic != value))
				{
					this.OnProfilePicChanging(value);
					this.SendPropertyChanging();
					this._ProfilePic = value;
					this.SendPropertyChanged("ProfilePic");
					this.OnProfilePicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_User_TB_UserRole", Storage="_TB_UserRoles", ThisKey="RnUserID", OtherKey="UserID")]
		public EntitySet<TB_UserRole> TB_UserRoles
		{
			get
			{
				return this._TB_UserRoles;
			}
			set
			{
				this._TB_UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_UserRoles(TB_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_User = this;
		}
		
		private void detach_TB_UserRoles(TB_UserRole entity)
		{
			this.SendPropertyChanging();
			entity.TB_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_UserRole")]
	public partial class TB_UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnUserRoleID;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<TB_Role> _TB_Role;
		
		private EntityRef<TB_User> _TB_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnUserRoleIDChanging(int value);
    partial void OnRnUserRoleIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public TB_UserRole()
		{
			this._TB_Role = default(EntityRef<TB_Role>);
			this._TB_User = default(EntityRef<TB_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnUserRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnUserRoleID
		{
			get
			{
				return this._RnUserRoleID;
			}
			set
			{
				if ((this._RnUserRoleID != value))
				{
					this.OnRnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RnUserRoleID = value;
					this.SendPropertyChanged("RnUserRoleID");
					this.OnRnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._TB_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._TB_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Role_TB_UserRole", Storage="_TB_Role", ThisKey="RoleID", OtherKey="RnRoleID", IsForeignKey=true)]
		public TB_Role TB_Role
		{
			get
			{
				return this._TB_Role.Entity;
			}
			set
			{
				TB_Role previousValue = this._TB_Role.Entity;
				if (((previousValue != value) 
							|| (this._TB_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Role.Entity = null;
						previousValue.TB_UserRoles.Remove(this);
					}
					this._TB_Role.Entity = value;
					if ((value != null))
					{
						value.TB_UserRoles.Add(this);
						this._RoleID = value.RnRoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_User_TB_UserRole", Storage="_TB_User", ThisKey="UserID", OtherKey="RnUserID", IsForeignKey=true)]
		public TB_User TB_User
		{
			get
			{
				return this._TB_User.Entity;
			}
			set
			{
				TB_User previousValue = this._TB_User.Entity;
				if (((previousValue != value) 
							|| (this._TB_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_User.Entity = null;
						previousValue.TB_UserRoles.Remove(this);
					}
					this._TB_User.Entity = value;
					if ((value != null))
					{
						value.TB_UserRoles.Add(this);
						this._UserID = value.RnUserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TB_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_VF_DailyStat")]
	public partial class TB_VF_DailyStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnVehicleDaily;
		
		private string _FromLocation;
		
		private string _ToLocation;
		
		private double _DistanceToday;
		
		private string _MaintenanceNotes;
		
		private int _RnVehicleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnVehicleDailyChanging(int value);
    partial void OnRnVehicleDailyChanged();
    partial void OnFromLocationChanging(string value);
    partial void OnFromLocationChanged();
    partial void OnToLocationChanging(string value);
    partial void OnToLocationChanged();
    partial void OnDistanceTodayChanging(double value);
    partial void OnDistanceTodayChanged();
    partial void OnMaintenanceNotesChanging(string value);
    partial void OnMaintenanceNotesChanged();
    partial void OnRnVehicleIDChanging(int value);
    partial void OnRnVehicleIDChanged();
    #endregion
		
		public TB_VF_DailyStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnVehicleDaily", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnVehicleDaily
		{
			get
			{
				return this._RnVehicleDaily;
			}
			set
			{
				if ((this._RnVehicleDaily != value))
				{
					this.OnRnVehicleDailyChanging(value);
					this.SendPropertyChanging();
					this._RnVehicleDaily = value;
					this.SendPropertyChanged("RnVehicleDaily");
					this.OnRnVehicleDailyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromLocation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FromLocation
		{
			get
			{
				return this._FromLocation;
			}
			set
			{
				if ((this._FromLocation != value))
				{
					this.OnFromLocationChanging(value);
					this.SendPropertyChanging();
					this._FromLocation = value;
					this.SendPropertyChanged("FromLocation");
					this.OnFromLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToLocation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ToLocation
		{
			get
			{
				return this._ToLocation;
			}
			set
			{
				if ((this._ToLocation != value))
				{
					this.OnToLocationChanging(value);
					this.SendPropertyChanging();
					this._ToLocation = value;
					this.SendPropertyChanged("ToLocation");
					this.OnToLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToday", DbType="Float NOT NULL")]
		public double DistanceToday
		{
			get
			{
				return this._DistanceToday;
			}
			set
			{
				if ((this._DistanceToday != value))
				{
					this.OnDistanceTodayChanging(value);
					this.SendPropertyChanging();
					this._DistanceToday = value;
					this.SendPropertyChanged("DistanceToday");
					this.OnDistanceTodayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceNotes", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MaintenanceNotes
		{
			get
			{
				return this._MaintenanceNotes;
			}
			set
			{
				if ((this._MaintenanceNotes != value))
				{
					this.OnMaintenanceNotesChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceNotes = value;
					this.SendPropertyChanged("MaintenanceNotes");
					this.OnMaintenanceNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnVehicleID", DbType="Int NOT NULL")]
		public int RnVehicleID
		{
			get
			{
				return this._RnVehicleID;
			}
			set
			{
				if ((this._RnVehicleID != value))
				{
					this.OnRnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._RnVehicleID = value;
					this.SendPropertyChanged("RnVehicleID");
					this.OnRnVehicleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_VF_Vehicle")]
	public partial class TB_VF_Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RnVehicleID;
		
		private string _RegNo;
		
		private string _Model;
		
		private System.DateTime _YearOfManuf;
		
		private System.DateTime _YearOfPurchase;
		
		private int _DriverID;
		
		private string _EngineNo;
		
		private string _ChassisNo;
		
		private int _Status;
		
		private bool _IsDeleted;
		
		private EntityRef<TB_HR_AttendUser> _TB_HR_AttendUser;
		
		private EntityRef<TB_VF_VehicleStatus> _TB_VF_VehicleStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRnVehicleIDChanging(int value);
    partial void OnRnVehicleIDChanged();
    partial void OnRegNoChanging(string value);
    partial void OnRegNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnYearOfManufChanging(System.DateTime value);
    partial void OnYearOfManufChanged();
    partial void OnYearOfPurchaseChanging(System.DateTime value);
    partial void OnYearOfPurchaseChanged();
    partial void OnDriverIDChanging(int value);
    partial void OnDriverIDChanged();
    partial void OnEngineNoChanging(string value);
    partial void OnEngineNoChanged();
    partial void OnChassisNoChanging(string value);
    partial void OnChassisNoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public TB_VF_Vehicle()
		{
			this._TB_HR_AttendUser = default(EntityRef<TB_HR_AttendUser>);
			this._TB_VF_VehicleStatus = default(EntityRef<TB_VF_VehicleStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RnVehicleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RnVehicleID
		{
			get
			{
				return this._RnVehicleID;
			}
			set
			{
				if ((this._RnVehicleID != value))
				{
					this.OnRnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._RnVehicleID = value;
					this.SendPropertyChanged("RnVehicleID");
					this.OnRnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RegNo
		{
			get
			{
				return this._RegNo;
			}
			set
			{
				if ((this._RegNo != value))
				{
					this.OnRegNoChanging(value);
					this.SendPropertyChanging();
					this._RegNo = value;
					this.SendPropertyChanged("RegNo");
					this.OnRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfManuf", DbType="DateTime NOT NULL")]
		public System.DateTime YearOfManuf
		{
			get
			{
				return this._YearOfManuf;
			}
			set
			{
				if ((this._YearOfManuf != value))
				{
					this.OnYearOfManufChanging(value);
					this.SendPropertyChanging();
					this._YearOfManuf = value;
					this.SendPropertyChanged("YearOfManuf");
					this.OnYearOfManufChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPurchase", DbType="Date NOT NULL")]
		public System.DateTime YearOfPurchase
		{
			get
			{
				return this._YearOfPurchase;
			}
			set
			{
				if ((this._YearOfPurchase != value))
				{
					this.OnYearOfPurchaseChanging(value);
					this.SendPropertyChanging();
					this._YearOfPurchase = value;
					this.SendPropertyChanged("YearOfPurchase");
					this.OnYearOfPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int NOT NULL")]
		public int DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					if (this._TB_HR_AttendUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineNo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EngineNo
		{
			get
			{
				return this._EngineNo;
			}
			set
			{
				if ((this._EngineNo != value))
				{
					this.OnEngineNoChanging(value);
					this.SendPropertyChanging();
					this._EngineNo = value;
					this.SendPropertyChanged("EngineNo");
					this.OnEngineNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChassisNo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChassisNo
		{
			get
			{
				return this._ChassisNo;
			}
			set
			{
				if ((this._ChassisNo != value))
				{
					this.OnChassisNoChanging(value);
					this.SendPropertyChanging();
					this._ChassisNo = value;
					this.SendPropertyChanged("ChassisNo");
					this.OnChassisNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._TB_VF_VehicleStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_HR_AttendUser_TB_VF_Vehicle", Storage="_TB_HR_AttendUser", ThisKey="DriverID", OtherKey="RnAttendUserID", IsForeignKey=true)]
		public TB_HR_AttendUser TB_HR_AttendUser
		{
			get
			{
				return this._TB_HR_AttendUser.Entity;
			}
			set
			{
				TB_HR_AttendUser previousValue = this._TB_HR_AttendUser.Entity;
				if (((previousValue != value) 
							|| (this._TB_HR_AttendUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_HR_AttendUser.Entity = null;
						previousValue.TB_VF_Vehicles.Remove(this);
					}
					this._TB_HR_AttendUser.Entity = value;
					if ((value != null))
					{
						value.TB_VF_Vehicles.Add(this);
						this._DriverID = value.RnAttendUserID;
					}
					else
					{
						this._DriverID = default(int);
					}
					this.SendPropertyChanged("TB_HR_AttendUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_VF_VehicleStatus_TB_VF_Vehicle", Storage="_TB_VF_VehicleStatus", ThisKey="Status", OtherKey="StatusID", IsForeignKey=true)]
		public TB_VF_VehicleStatus TB_VF_VehicleStatus
		{
			get
			{
				return this._TB_VF_VehicleStatus.Entity;
			}
			set
			{
				TB_VF_VehicleStatus previousValue = this._TB_VF_VehicleStatus.Entity;
				if (((previousValue != value) 
							|| (this._TB_VF_VehicleStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_VF_VehicleStatus.Entity = null;
						previousValue.TB_VF_Vehicles.Remove(this);
					}
					this._TB_VF_VehicleStatus.Entity = value;
					if ((value != null))
					{
						value.TB_VF_Vehicles.Add(this);
						this._Status = value.StatusID;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("TB_VF_VehicleStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
